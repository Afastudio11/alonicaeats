# Multi-stage build untuk production
FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./

# Install ALL dependencies (dev needed for build)
RUN npm ci && npm cache clean --force

# Copy source code
COPY . .

# Build aplikasi
RUN npm run build

# Production stage
FROM node:20-alpine AS production

# Install production dependencies only
RUN apk add --no-cache dumb-init curl

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S alonica -u 1001

# Set working directory
WORKDIR /app

# Copy package files first
COPY --from=builder --chown=alonica:nodejs /app/package*.json ./

# Install only production dependencies
RUN npm ci --omit=dev && npm cache clean --force

# Copy built application dari builder stage
COPY --from=builder --chown=alonica:nodejs /app/dist ./dist

# Switch to non-root user
USER alonica

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Start aplikasi dengan dumb-init untuk proper signal handling
ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "start"]